public class LinkedList{
    public Node head;

    public LinkedList() {
        head = null;
    }
    
    public void addToFront(Integer value){
        Node node = new Node(value, null);
        node.next = head;//head == null ? null : new Node(head.data, head.next);
        head = node;
    }

    public Integer removeFromFront(){
        if (head == null) return null;
        Integer value = head.data;
        Node temp = head;
        head = temp.next;
        return value;
    }

    public void addToTail(Integer value){
        Node node = new Node(value, null);

        if (head == null) {
            head = node;
            return;    
        }

        Node tail = head;
        while(tail.next != null) {
            tail = head.next;
        }
        tail.next = node;
    }

    public Integer removeFromTail(){
        if (head == null) return null;
        Node beforeTail;
        Node tail = head;
        while(tail.next != null) {
            beforeTail = tail;
            tail = head.next;
        }

        beforeTail.next = null;
        return beforeTail.data;
    }

    public Integer size(){
        if (head == null) return 0;
        Integer size = 1;
        Node tail = head;
        while(tail.next != null) {
            size++;
            tail = head.next;
        }

        return size;
    }    
}

public class Node{
    Integer data;
    Node next;

    public Node(Integer data, Node next) {
        this.data = data;
        this.next = next;
    }
}